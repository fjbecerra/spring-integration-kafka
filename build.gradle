buildscript {
    repositories {


        mavenCentral()
          maven { url "http://clojars.org/repo" } // Required to automatically download this plugin
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.3.0.RELEASE')
        
		 classpath 'org.apache.maven:maven-artifact:2.2.1' // 3.x won't work
    classpath 'org.apache.avro:avro-compiler:1.7.7' // Use Avro 1.7.7 to compile the Avro files
    classpath 'org.clojars.miguno:avro-gradle-plugin:1.7.7.2'



    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'avro-gradle-plugin'

ext {
    avroTaskGroup = "Avro"
    avroSource = "schemas"
    avroDest = "target/generated-avro-sources/main/java"
}




jar {
    baseName = 'gs-spring-boot'
    version =  '0.1.0'
}

repositories {
   
    mavenCentral()

}

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
    avroTaskGroup = "Avro"
    avroSource = "schemas"
    avroDest = "target/generated-avro-sources/main/java"
}


dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"

    }
    compile("org.springframework.boot:spring-boot-starter-jetty")
    // end::jetty[]
    // tag::actuator[]
    compile("org.springframework.boot:spring-boot-starter-actuator")
    // end::actuator[]
    compile('org.springframework.boot:spring-boot-starter-integration:1.3.0.RELEASE')


    compile("org.springframework.integration:spring-integration-twitter:4.2.2.RELEASE")

    compile('org.springframework.integration:spring-integration-kafka:1.3.0.RELEASE'){
        exclude module: 'log4j'
        exclude module: 'slf4j-log4j12'
        exclude module: 'log4j-over-slf4j'
        exclude module: 'jms'
        exclude module: 'jmxtools'
        exclude module: 'jmxri'
    }

    compile('org.apache.avro:avro:1.7.7')


    testCompile("junit:junit")
    testCompile('org.springframework.boot:spring-boot-starter-test:1.3.0.RELEASE')
}

compileAvro.group = avroTaskGroup
compileAvro.description = "Generates Java code from avro schema"
compileAvro.source = avroSource
compileAvro.destinationDir = file(avroDest)

task cleanAvro(type: Delete) {
    group = avroTaskGroup
    description = "deletes generated avro code"
    delete avroDest 
}

compileJava.dependsOn compileAvro

sourceSets {
    main {
        java {
            srcDir avroDest
        }
        resources {
            srcDir avroSource
        }
    }
}



task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}